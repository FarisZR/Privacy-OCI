name: Check for updates and build

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  # Possibility to run it manually
  workflow_dispatch:
    inputs:
      trigger_all_builds:
        description: build all images
        default: false
        type: boolean
        required: true
  push:
    paths:
      - ".github/workflows/autobuild.yaml"
      - "Dockerfile-scribe"
      - "Dockerfile-quetre"
      - "Dockerfile-breezewiki"
      - "Dockerfile-nitter"
      - "remote-check.sh"
  # Automated
  schedule:
    # Run Every hour
    - cron: "0 * * * *"

jobs:
  check-for-updates:
    runs-on: ubuntu-latest
    outputs:
      # quetre: ${{ steps.quetre.outputs.quetre-out-of-date || steps.trigger-all.outputs.build-all }}
      scribe: ${{ steps.scribe.outputs.scribe-out-of-date || steps.trigger-all.outputs.build-all }}
      breezewiki: ${{ steps.breezewiki.outputs.breezewiki-out-of-date || steps.trigger-all.outputs.build-all }}
      nitter: ${{ steps.nitter.outputs.nitter-out-of-date || steps.trigger-all.outputs.build-all }}
    # clone repo
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: trigger all builds if requested
        if: ${{ github.event.inputs.trigger_all_builds == 'true' }}
        id: trigger-all
        run: |
          echo "build-all=true" >> $GITHUB_OUTPUT

      # - name: Pull quetre remote commits
      #   if: ${{ github.event.inputs.trigger_all_builds == 'false' || github.event.inputs.trigger_all_builds == '' }}
      #   id: quetre
      #   run: sh remote-check.sh https://github.com/zyachel/quetre quetre-local.txt build-hashes/quetre.txt quetre-out-of-date

      - name: Pull Scribe remote commits
        if: ${{ github.event.inputs.trigger_all_builds == 'false' || github.event.inputs.trigger_all_builds == '' }}
        id: scribe
        run: sh remote-check.sh https://git.sr.ht/~edwardloveall/scribe scribe-local.txt build-hashes/scribe.txt scribe-out-of-date

      - name: Pull Breezewiki remote commits
        if: ${{ github.event.inputs.trigger_all_builds == 'false' || github.event.inputs.trigger_all_builds == '' }}
        id: breezewiki
        run: sh remote-check.sh https://gitdab.com/cadence/breezewiki breezewiki-local.txt build-hashes/breezewiki.txt breezewiki-out-of-date

      - name: Pull Nitter guest_accounts remote commits
        if: ${{ github.event.inputs.trigger_all_builds == 'false' || github.event.inputs.trigger_all_builds == '' }}
        id: nitter
        run: sh remote-check.sh https://github.com/zedeus/nitter nitter-local.txt build-hashes/nitter.txt nitter-out-of-date guest_accounts

  # build-quetre:
  #   needs: check-for-updates
  #   if: ${{ needs.check-for-updates.outputs.quetre == 'true' }}
  #   uses: FarisZR/Privacy-OCI/.github/workflows/build-workflow.yml@main
  #   secrets: inherit
  #   with:
  #     image_name: fariszr/quetre
  #     dockerfile: Dockerfile-quetre
  #     context: .
  #     license: AGPL-3.0
  #     clone_repo: ${{ false }}
  #     hash_file: build-hashes/quetre.txt
  #     app_name: quetre
  #     repo: https://github.com/zyachel/quetre
  #     build_arch: linux/amd64,linux/arm64,linux/arm/v7
  #   permissions:
  #     contents: write
  #     packages: write
  #     # This is used to complete the identity challenge
  #     # with sigstore/fulcio when running outside of PRs.
  #     id-token: write

  build-scribe:
    needs: check-for-updates
    if: ${{ needs.check-for-updates.outputs.quetre == 'true' }}
    uses: FarisZR/Privacy-OCI/.github/workflows/build-workflow.yml@main
    secrets: inherit
    with:
      image_name: fariszr/scribe
      dockerfile: Dockerfile-scribe
      context: ./scribe
      license: AGPL-3.0
      clone_repo: ${{ true }}
      hash_file: build-hashes/scribe.txt
      app_name: quetre
      repo: https://git.sr.ht/~edwardloveall/scribe
      build_arch: linux/amd64,linux/arm64
    permissions:
      contents: write
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

  build-breezewiki:
    needs: check-for-updates
    if: ${{ needs.check-for-updates.outputs.breezewiki == 'true' }}
    uses: FarisZR/Privacy-OCI/.github/workflows/build-workflow.yml@main
    secrets: inherit
    with:
      image_name: fariszr/breezewiki
      dockerfile: Dockerfile-breezewiki
      context: ./breezewiki
      license: AGPL-3.0
      clone_repo: ${{ true }}
      hash_file: build-hashes/breezewiki.txt
      app_name: breezewiki
      repo: https://gitdab.com/cadence/breezewiki
      build_arch: linux/amd64
    permissions:
      contents: write
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

  build-nitter:
    needs: check-for-updates
    if: ${{ needs.check-for-updates.outputs.nitter == 'true' }}
    uses: FarisZR/Privacy-OCI/.github/workflows/build-workflow.yml@main
    secrets: inherit
    with:
      image_name: fariszr/nitter
      dockerfile: Dockerfile-nitter
      context: ./nitter
      license: AGPL-3.0
      clone_repo: ${{ true }}
      hash_file: build-hashes/nitter.txt
      app_name: nitter
      branch: guest_accounts
      repo: https://github.com/zedeus/nitter
      build_arch: linux/amd64, linux/arm64
    permissions:
      contents: write
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write