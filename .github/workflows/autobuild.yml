name: Check for updates and build

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  # Possibility to run it manually
  workflow_dispatch:
  push:
    paths:
      - ".github/workflows/autobuild.yaml"
      - "Dockerfile-scribe"
      - "Dockerfile-quetre"
      - "Dockerfile-breezewiki"
      - "remote-check.sh"
  # Automated
  schedule:
    # Run Every hour
    - cron: "0 * * * *"

jobs:
  check-for-updates:
    runs-on: ubuntu-latest
    outputs:
      quetre: ${{ steps.quetre.outputs.quetre-out-of-date }}
      scribe: ${{ steps.scribe.outputs.scribe-out-of-date }}
      breezewiki: ${{ steps.breezewiki.outputs.breezewiki-out-of-date }}
    # clone repo
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Pull quetre remote commits
        id: quetre
        run: sh remote-check.sh https://github.com/zyachel/quetre quetre-local.txt build-hashes/quetre.txt quetre-out-of-date

      - name: Pull Scribe remote commits
        id: scribe
        run: sh remote-check.sh https://git.sr.ht/~edwardloveall/scribe scribe-local.txt build-hashes/scribe.txt scribe-out-of-date

      - name: Pull Breezewiki remote commits
        id: breezewiki
        run: sh remote-check.sh https://gitdab.com/cadence/breezewiki breezewiki-local.txt build-hashes/breezewiki.txt breezewiki-out-of-date

  build-quetre:
    needs: check-for-updates
    if: ${{ needs.check-for-updates.outputs.quetre == 'true' }}
    runs-on: ubuntu-latest
    env:
      CONTEXT: .
      LICENSE: AGPL-3.0
      CLONE_REPO: ${{ false }}
      IMAGE_NAME: fariszr/quetre
      DOCKER_FILE: Dockerfile-quetre
      HASH_FILE: build-hashes/quetre.txt
      APP_NAME: quetre
      REPO: https://github.com/zyachel/quetre
    permissions:
      contents: write
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry docker.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Log into registry quay.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USER }}
          password: ${{ secrets.QUAY_PASS }}

      - name: Log into registry ghcr.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/${{ env.IMAGE_NAME }}
            quay.io/${{ env.IMAGE_NAME }}
            docker.io/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.licenses=${{ env.LICENSE }}
            org.opencontainers.image.title=${{ env.APP_NAME }}

      - name: Clone git repo for docker context
        if: env.CLONE_REPO == 'true'
        run: |
          git clone ${{ env.REPO }} ${{ env.CONTEXT }}
          cp ${{ env.DOCKER_FILE }} ${{ env.CONTEXT }}/${{ env.DOCKER_FILE }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: ${{ env.CONTEXT }}
          file: ${{ env.DOCKER_FILE }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            quay.io/${{ env.IMAGE_NAME }}:latest
            ghcr.io/${{ env.IMAGE_NAME }}:latest
            docker.io/${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update build commit
        run: git ls-remote ${{ env.REPO }} HEAD > ${{ env.HASH_FILE }}

      - name: Commit
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git pull
          git add ${{ env.HASH_FILE }}
          git commit -m "update ${{ env.APP_NAME }} build commit"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

  build-scribe:
    needs: check-for-updates
    if: ${{ needs.check-for-updates.outputs.scribe == 'true' }}
    runs-on: ubuntu-latest
    env:
      CLONE_REPO: ${{ true }}
      LICENSE: AGPL-3.0
      IMAGE_NAME: fariszr/scribe
      DOCKER_FILE: Dockerfile-scribe
      HASH_FILE: build-hashes/scribe.txt
      APP_NAME: scribe
      REPO: https://git.sr.ht/~edwardloveall/scribe
      CONTEXT: ./scribe
    permissions:
      contents: write
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry docker.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Log into registry quay.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USER }}
          password: ${{ secrets.QUAY_PASS }}

      - name: Log into registry ghcr.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/${{ env.IMAGE_NAME }}
            quay.io/${{ env.IMAGE_NAME }}
            docker.io/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.licenses=${{ env.LICENSE }}
            org.opencontainers.image.title=${{ env.APP_NAME }}

      - name: Clone git repo for docker context
        if: env.CLONE_REPO == 'true'
        run: |
          git clone ${{ env.REPO }} ${{ env.CONTEXT }}
          cp ${{ env.DOCKER_FILE }} ${{ env.CONTEXT }}/${{ env.DOCKER_FILE }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: ${{ env.CONTEXT }}
          file: ${{ env.DOCKER_FILE }}
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            quay.io/${{ env.IMAGE_NAME }}:latest
            ghcr.io/${{ env.IMAGE_NAME }}:latest
            docker.io/${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update build commit
        run: git ls-remote ${{ env.REPO }} HEAD > ${{ env.HASH_FILE }}

      - name: Commit
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git pull
          git add ${{ env.HASH_FILE }}
          git commit -m "update ${{ env.APP_NAME }} build commit"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

  build-breezewiki:
    needs: check-for-updates
    if: ${{ needs.check-for-updates.outputs.breezewiki == 'true' }}
    runs-on: ubuntu-latest
    env:
      CONTEXT: ./breezewiki
      LICENSE: AGPL-3.0
      CLONE_REPO: ${{ true }}
      IMAGE_NAME: fariszr/breezewiki
      DOCKER_FILE: Dockerfile-breezewiki
      HASH_FILE: build-hashes/breezewiki.txt
      APP_NAME: breezewiki
      REPO: https://gitdab.com/cadence/breezewiki
    permissions:
      contents: write
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry docker.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Log into registry quay.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USER }}
          password: ${{ secrets.QUAY_PASS }}

      - name: Log into registry ghcr.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/${{ env.IMAGE_NAME }}
            quay.io/${{ env.IMAGE_NAME }}
            docker.io/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.licenses=${{ env.LICENSE }}
            org.opencontainers.image.title=${{ env.APP_NAME }}

      - name: Clone git repo for docker context
        if: env.CLONE_REPO == 'true'
        run: |
          git clone ${{ env.REPO }} ${{ env.CONTEXT }}
          cp ${{ env.DOCKER_FILE }} ${{ env.CONTEXT }}/${{ env.DOCKER_FILE }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: ${{ env.CONTEXT }}
          file: ${{ env.DOCKER_FILE }}
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            quay.io/${{ env.IMAGE_NAME }}:latest
            ghcr.io/${{ env.IMAGE_NAME }}:latest
            docker.io/${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update build commit
        run: git ls-remote ${{ env.REPO }} HEAD > ${{ env.HASH_FILE }}

      - name: Commit
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git pull
          git add ${{ env.HASH_FILE }}
          git commit -m "update ${{ env.APP_NAME }} build commit"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
